# =============================================================================
# k8s/ingress/ingress.yaml
# Ingress Controller for External Traffic Management
# Configured to run alongside Apache on different ports
# =============================================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bmn-ingress
  namespace: bookmynurse
  annotations:
    # Use nginx ingress controller
    kubernetes.io/ingress.class: "nginx"
    # Enable SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Rewrite target for API calls
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # Enable CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    # Certificate manager for Let's Encrypt (optional)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    # Use non-standard ports to avoid conflict with Apache
    nginx.ingress.kubernetes.io/use-proxy-protocol: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  rules:
  - 
    http:
      paths:
      # API routes - must come first for proper matching
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 3000
      # Health check for backend - specific path
      - path: /health
        pathType: Exact
        backend:
          service:
            name: backend-service
            port:
              number: 3000
      # Frontend routes - catch all other paths
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 8080