# =============================================================================
# k8s/backend/deployment.yaml
# Node.js Backend Deployment
# =============================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: bookmynurse
  labels:
    app: backend
    tier: api
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: backend
      tier: api
  template:
    metadata:
      labels:
        app: backend
        tier: api
    spec:
      # Init container to wait for MySQL to be ready
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for MySQL to be ready..."
          until nc -z mysql-service 3306; do
            echo "MySQL is not ready yet. Sleeping for 5 seconds..."
            sleep 5
          done
          echo "MySQL is ready!"
      containers:
      - name: backend
        image: emmamyers/bmn-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 30008
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "30008"
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: jwt-secret
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 30008
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 30008
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: uploads-storage
          mountPath: /app/uploads
        - name: temp-volume
          mountPath: /tmp
      volumes:
      - name: uploads-storage
        persistentVolumeClaim:
          claimName: uploads-pvc
      - name: temp-volume
        emptyDir: {}